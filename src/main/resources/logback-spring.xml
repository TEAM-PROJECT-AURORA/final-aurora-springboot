<?xml version="1.0" encoding="UTF-8"?>

<configuration scan="true" scanPeriod="30 seconds">

    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>%-5level %d{HH:mm:ss.SSS} [%thread] %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>


    <appender name="ROLLING" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <file>elk-spring.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">

            <fileNamePattern>/var/slog/elk-spring.-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 100MB -->
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>[%-5level] %d{HH:mm:ss.SSS} %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- Log Stash 사용시 사용할 TCP 통신 정보
			LogstashEncoder : spring에서 발생하는 로그를 elk stack에서 사용되는 json 형태로 변환
		  LogstashTcpSocketAppender : Logstash 서버에 로그 전송
     -->
    <appender name="stash" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
<!--        <destination>127.0.0.1:4560</destination>-->
<!--        <destination>172.22.208.213:4560</destination>-->
        <encoder class="net.logstash.logback.encoder.LogstashEncoder"></encoder>
    </appender>

    <!-- root레벨 설정 -->
    <root level="DEBUG">
        <appender-ref ref="console" />
        <appender-ref ref="stash" />
        <appender-ref ref="ROLLING" />
    </root>

</configuration>